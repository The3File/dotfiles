#!/usr/bin/env bash

sync() { for i in {1..2}; do get_dots $i; done }

get_dots() {
   case $1 in

      1) d="$HOME/.config"; ot="$HOME/.dotfiles/.config"
         fs="bspwm sxhkd dunst i3 nvim qutebrowser polybar ranger wal mimeapps.list compton.conf" ;;

      2) d="$HOME"; ot="$HOME/.dotfiles"
	 fs=".Scripts .bin .local/share/applications .apps .latexmkrc\
	 .nvimrc .profile .oh-my-zsh .vimrc .xinitrc .Xmodmap .Xresources\
	 .xsessionrc .zprofile .aliases .zshrc .bashrc .bash_profile .bash_prompt" ;;

   esac

   op=( -ai --delete "${o[@]}" "--exclude='.git/'" "--exclude='plugged/'")

   for f in $fs; do [[ -f "$d/$f" || -d "$d/$f" ]] && rsync "${op[@]}" "$d/$f" "$ot"; done
}

prompt() {
   printf '\e[33m%s\e[0m' "Push? [y/N]"; read -rsn1; printf '\n'
   case $REPLY in y) o=("-q"); sync; push ;; *) exit 1; esac
}

push() {
   cd "$HOME/.dotfiles/" || exit

   printf '\e[33m%s\e[0m' "Commit message (empty='dotsync'): "
   read -r a; [[ -z $a ]] && a="update"

   git add . 
   git commit -a -m "$a" &&
      git push -u origin master
}

main() { o=("-n"); sync; prompt; }

[[ $1 = "push" ]] && prompt
[[ -z $1 ]] && main || echo "don't know what to do"
