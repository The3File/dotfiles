#!/usr/bin/env bash
# Prokrastimer
# Over-engineered pomodoro timer written in bash
main() {
    logo=$(figlet -f big prokrastimer); count=0; state="work"

    trap 'tput cvvis && completed && exit' EXIT
    trap 'clean' SIGWINCH

    clean; prompt; tput civis; stty -echo
    printf "\e[3A\r\e[J\e[1;35mpress ENTER to start $state"; read 2>/dev/null
    clean; timer
}
timer() {
    ((sec=1,start_time=$SECONDS))
    [[ $state = work ]] && ((count++))

    while [[ $sec > 0 ]]; do
	((sec=(state-(SECONDS-start_time))))
	printf "\e[10;0H\e[1;35m$state left: %02d:%02d" "$((sec/60))" "$((sec%60))"
	bar $((SECONDS-start_time)) $state
    done

    somedone
}
somedone() {
    play ~/.Scripts/.prokrastimer/gong.wav 2>/dev/null &
    notify-send "$state completed" -a Prokrastimer

    [[ $count == $sess ]] && exit 0

    printf "\e[10;17H\e[1;39m - $state completed"
    [[ $state = work ]] && state="break" || state="work"
    printf "\n\e[1;33mPress ENTER to start $state"; read 2>/dev/null
    printf "\e[1A\r\e[J"

    timer
}
bar() {
    ((width=$(tput cols)-2,rows=$(tput lines)))

    printf -v elaps "%$(($1*width/$2))s"
    printf -v total "%$((width-($1*width/$2)))s"
    printf '\e[J\e['$rows';0H%s\r' "[${elaps// /\#}${total}]"
    sleep .5
}
prompt() {
    printf "\e[10;0H\e[1;37mLenght of work in min (25): \e[1;35m\e[s"; read work
    printf "\e[1;37mLength of breaks in min. (5): \e[1;33m\e[s"; read break
    printf "\e[1;37mNumber of sessions (2): \e[s"; read sess

    [[ ! -n $work ]] && ((work=25*60)) || ((work*=60))
    [[ ! -n $break ]] && ((break=5*60)) || ((break*=60))
    [[ -z "$sess" ]] && sess=2
}
completed() {
    [[ $((count*work/60/60)) > 0 ]] && hour="%2d hours and" || hour=""

    printf "\e[10;0H\e[J\e[1;33mTotal work:$hour%2d min.\n"\
    "$((count*work/60/60))" "$((count*work/60%60))"
}
clean() { [[ ${FUNCNAME[1]} != prompt ]] && printf "\e[2J\e[H\e[1;34m$logo"; }
main
